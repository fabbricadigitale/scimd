package filter

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 25, 242,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	3, 2, 3, 2, 7, 2, 70, 10, 2, 12, 2, 14, 2, 73, 11, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 3, 95, 10, 3, 3, 4, 3, 4, 3, 5, 3, 5,
	3, 5, 3, 5, 3, 5, 3, 5, 6, 5, 105, 10, 5, 13, 5, 14, 5, 106, 3, 5, 3, 5,
	3, 6, 3, 6, 3, 7, 3, 7, 3, 7, 3, 7, 3, 8, 3, 8, 3, 8, 3, 8, 3, 9, 3, 9,
	3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 10, 3, 11, 3, 11, 3, 11, 3, 11, 3,
	12, 3, 12, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 14,
	3, 14, 3, 15, 3, 15, 3, 15, 3, 15, 3, 16, 3, 16, 3, 16, 3, 16, 3, 17, 3,
	17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 19,
	3, 19, 3, 19, 3, 19, 3, 19, 5, 19, 169, 10, 19, 3, 19, 3, 19, 3, 20, 3,
	20, 3, 21, 3, 21, 3, 22, 3, 22, 3, 23, 3, 23, 3, 24, 3, 24, 3, 25, 3, 25,
	3, 26, 3, 26, 5, 26, 187, 10, 26, 3, 27, 3, 27, 3, 27, 7, 27, 192, 10,
	27, 12, 27, 14, 27, 195, 11, 27, 3, 27, 3, 27, 3, 28, 3, 28, 3, 28, 5,
	28, 202, 10, 28, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 30, 3, 30,
	3, 31, 5, 31, 213, 10, 31, 3, 31, 3, 31, 3, 31, 6, 31, 218, 10, 31, 13,
	31, 14, 31, 219, 5, 31, 222, 10, 31, 3, 31, 5, 31, 225, 10, 31, 3, 32,
	3, 32, 3, 32, 7, 32, 230, 10, 32, 12, 32, 14, 32, 233, 11, 32, 5, 32, 235,
	10, 32, 3, 33, 3, 33, 5, 33, 239, 10, 33, 3, 33, 3, 33, 2, 2, 34, 3, 3,
	5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13,
	25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 22,
	43, 23, 45, 24, 47, 25, 49, 2, 51, 2, 53, 2, 55, 2, 57, 2, 59, 2, 61, 2,
	63, 2, 65, 2, 3, 2, 15, 3, 2, 34, 34, 4, 2, 87, 87, 119, 119, 4, 2, 84,
	84, 116, 116, 4, 2, 80, 80, 112, 112, 4, 2, 67, 92, 99, 124, 5, 2, 47,
	47, 50, 59, 97, 97, 4, 2, 36, 36, 94, 94, 10, 2, 36, 36, 49, 49, 94, 94,
	100, 100, 104, 104, 112, 112, 116, 116, 118, 118, 5, 2, 50, 59, 67, 72,
	99, 104, 3, 2, 50, 59, 3, 2, 51, 59, 4, 2, 71, 71, 103, 103, 4, 2, 45,
	45, 47, 47, 2, 251, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2,
	2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2,
	2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3,
	2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31,
	3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2,
	39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2,
	2, 47, 3, 2, 2, 2, 3, 67, 3, 2, 2, 2, 5, 94, 3, 2, 2, 2, 7, 96, 3, 2, 2,
	2, 9, 98, 3, 2, 2, 2, 11, 110, 3, 2, 2, 2, 13, 112, 3, 2, 2, 2, 15, 116,
	3, 2, 2, 2, 17, 120, 3, 2, 2, 2, 19, 124, 3, 2, 2, 2, 21, 128, 3, 2, 2,
	2, 23, 132, 3, 2, 2, 2, 25, 136, 3, 2, 2, 2, 27, 140, 3, 2, 2, 2, 29, 144,
	3, 2, 2, 2, 31, 148, 3, 2, 2, 2, 33, 152, 3, 2, 2, 2, 35, 158, 3, 2, 2,
	2, 37, 163, 3, 2, 2, 2, 39, 172, 3, 2, 2, 2, 41, 174, 3, 2, 2, 2, 43, 176,
	3, 2, 2, 2, 45, 178, 3, 2, 2, 2, 47, 180, 3, 2, 2, 2, 49, 182, 3, 2, 2,
	2, 51, 186, 3, 2, 2, 2, 53, 188, 3, 2, 2, 2, 55, 198, 3, 2, 2, 2, 57, 203,
	3, 2, 2, 2, 59, 209, 3, 2, 2, 2, 61, 212, 3, 2, 2, 2, 63, 234, 3, 2, 2,
	2, 65, 236, 3, 2, 2, 2, 67, 71, 5, 49, 25, 2, 68, 70, 5, 51, 26, 2, 69,
	68, 3, 2, 2, 2, 70, 73, 3, 2, 2, 2, 71, 69, 3, 2, 2, 2, 71, 72, 3, 2, 2,
	2, 72, 4, 3, 2, 2, 2, 73, 71, 3, 2, 2, 2, 74, 75, 7, 34, 2, 2, 75, 95,
	5, 53, 27, 2, 76, 77, 7, 34, 2, 2, 77, 95, 5, 61, 31, 2, 78, 79, 7, 34,
	2, 2, 79, 80, 7, 118, 2, 2, 80, 81, 7, 116, 2, 2, 81, 82, 7, 119, 2, 2,
	82, 95, 7, 103, 2, 2, 83, 84, 7, 34, 2, 2, 84, 85, 7, 104, 2, 2, 85, 86,
	7, 99, 2, 2, 86, 87, 7, 110, 2, 2, 87, 88, 7, 117, 2, 2, 88, 95, 7, 103,
	2, 2, 89, 90, 7, 34, 2, 2, 90, 91, 7, 112, 2, 2, 91, 92, 7, 119, 2, 2,
	92, 93, 7, 110, 2, 2, 93, 95, 7, 110, 2, 2, 94, 74, 3, 2, 2, 2, 94, 76,
	3, 2, 2, 2, 94, 78, 3, 2, 2, 2, 94, 83, 3, 2, 2, 2, 94, 89, 3, 2, 2, 2,
	95, 6, 3, 2, 2, 2, 96, 97, 9, 2, 2, 2, 97, 8, 3, 2, 2, 2, 98, 99, 9, 3,
	2, 2, 99, 100, 9, 4, 2, 2, 100, 101, 9, 5, 2, 2, 101, 104, 5, 11, 6, 2,
	102, 105, 11, 2, 2, 2, 103, 105, 10, 2, 2, 2, 104, 102, 3, 2, 2, 2, 104,
	103, 3, 2, 2, 2, 105, 106, 3, 2, 2, 2, 106, 104, 3, 2, 2, 2, 106, 107,
	3, 2, 2, 2, 107, 108, 3, 2, 2, 2, 108, 109, 5, 11, 6, 2, 109, 10, 3, 2,
	2, 2, 110, 111, 7, 60, 2, 2, 111, 12, 3, 2, 2, 2, 112, 113, 7, 34, 2, 2,
	113, 114, 7, 114, 2, 2, 114, 115, 7, 116, 2, 2, 115, 14, 3, 2, 2, 2, 116,
	117, 7, 34, 2, 2, 117, 118, 7, 103, 2, 2, 118, 119, 7, 115, 2, 2, 119,
	16, 3, 2, 2, 2, 120, 121, 7, 34, 2, 2, 121, 122, 7, 112, 2, 2, 122, 123,
	7, 103, 2, 2, 123, 18, 3, 2, 2, 2, 124, 125, 7, 34, 2, 2, 125, 126, 7,
	101, 2, 2, 126, 127, 7, 113, 2, 2, 127, 20, 3, 2, 2, 2, 128, 129, 7, 34,
	2, 2, 129, 130, 7, 117, 2, 2, 130, 131, 7, 121, 2, 2, 131, 22, 3, 2, 2,
	2, 132, 133, 7, 34, 2, 2, 133, 134, 7, 103, 2, 2, 134, 135, 7, 121, 2,
	2, 135, 24, 3, 2, 2, 2, 136, 137, 7, 34, 2, 2, 137, 138, 7, 105, 2, 2,
	138, 139, 7, 118, 2, 2, 139, 26, 3, 2, 2, 2, 140, 141, 7, 34, 2, 2, 141,
	142, 7, 105, 2, 2, 142, 143, 7, 103, 2, 2, 143, 28, 3, 2, 2, 2, 144, 145,
	7, 34, 2, 2, 145, 146, 7, 110, 2, 2, 146, 147, 7, 118, 2, 2, 147, 30, 3,
	2, 2, 2, 148, 149, 7, 34, 2, 2, 149, 150, 7, 110, 2, 2, 150, 151, 7, 103,
	2, 2, 151, 32, 3, 2, 2, 2, 152, 153, 7, 34, 2, 2, 153, 154, 7, 99, 2, 2,
	154, 155, 7, 112, 2, 2, 155, 156, 7, 102, 2, 2, 156, 157, 7, 34, 2, 2,
	157, 34, 3, 2, 2, 2, 158, 159, 7, 34, 2, 2, 159, 160, 7, 113, 2, 2, 160,
	161, 7, 116, 2, 2, 161, 162, 7, 34, 2, 2, 162, 36, 3, 2, 2, 2, 163, 164,
	7, 112, 2, 2, 164, 165, 7, 113, 2, 2, 165, 166, 7, 118, 2, 2, 166, 168,
	3, 2, 2, 2, 167, 169, 5, 7, 4, 2, 168, 167, 3, 2, 2, 2, 168, 169, 3, 2,
	2, 2, 169, 170, 3, 2, 2, 2, 170, 171, 5, 41, 21, 2, 171, 38, 3, 2, 2, 2,
	172, 173, 7, 43, 2, 2, 173, 40, 3, 2, 2, 2, 174, 175, 7, 42, 2, 2, 175,
	42, 3, 2, 2, 2, 176, 177, 7, 95, 2, 2, 177, 44, 3, 2, 2, 2, 178, 179, 7,
	48, 2, 2, 179, 46, 3, 2, 2, 2, 180, 181, 7, 93, 2, 2, 181, 48, 3, 2, 2,
	2, 182, 183, 9, 6, 2, 2, 183, 50, 3, 2, 2, 2, 184, 187, 9, 7, 2, 2, 185,
	187, 5, 49, 25, 2, 186, 184, 3, 2, 2, 2, 186, 185, 3, 2, 2, 2, 187, 52,
	3, 2, 2, 2, 188, 193, 7, 36, 2, 2, 189, 192, 5, 55, 28, 2, 190, 192, 10,
	8, 2, 2, 191, 189, 3, 2, 2, 2, 191, 190, 3, 2, 2, 2, 192, 195, 3, 2, 2,
	2, 193, 191, 3, 2, 2, 2, 193, 194, 3, 2, 2, 2, 194, 196, 3, 2, 2, 2, 195,
	193, 3, 2, 2, 2, 196, 197, 7, 36, 2, 2, 197, 54, 3, 2, 2, 2, 198, 201,
	7, 94, 2, 2, 199, 202, 9, 9, 2, 2, 200, 202, 5, 57, 29, 2, 201, 199, 3,
	2, 2, 2, 201, 200, 3, 2, 2, 2, 202, 56, 3, 2, 2, 2, 203, 204, 7, 119, 2,
	2, 204, 205, 5, 59, 30, 2, 205, 206, 5, 59, 30, 2, 206, 207, 5, 59, 30,
	2, 207, 208, 5, 59, 30, 2, 208, 58, 3, 2, 2, 2, 209, 210, 9, 10, 2, 2,
	210, 60, 3, 2, 2, 2, 211, 213, 7, 47, 2, 2, 212, 211, 3, 2, 2, 2, 212,
	213, 3, 2, 2, 2, 213, 214, 3, 2, 2, 2, 214, 221, 5, 63, 32, 2, 215, 217,
	7, 48, 2, 2, 216, 218, 9, 11, 2, 2, 217, 216, 3, 2, 2, 2, 218, 219, 3,
	2, 2, 2, 219, 217, 3, 2, 2, 2, 219, 220, 3, 2, 2, 2, 220, 222, 3, 2, 2,
	2, 221, 215, 3, 2, 2, 2, 221, 222, 3, 2, 2, 2, 222, 224, 3, 2, 2, 2, 223,
	225, 5, 65, 33, 2, 224, 223, 3, 2, 2, 2, 224, 225, 3, 2, 2, 2, 225, 62,
	3, 2, 2, 2, 226, 235, 7, 50, 2, 2, 227, 231, 9, 12, 2, 2, 228, 230, 9,
	11, 2, 2, 229, 228, 3, 2, 2, 2, 230, 233, 3, 2, 2, 2, 231, 229, 3, 2, 2,
	2, 231, 232, 3, 2, 2, 2, 232, 235, 3, 2, 2, 2, 233, 231, 3, 2, 2, 2, 234,
	226, 3, 2, 2, 2, 234, 227, 3, 2, 2, 2, 235, 64, 3, 2, 2, 2, 236, 238, 9,
	13, 2, 2, 237, 239, 9, 14, 2, 2, 238, 237, 3, 2, 2, 2, 238, 239, 3, 2,
	2, 2, 239, 240, 3, 2, 2, 2, 240, 241, 5, 63, 32, 2, 241, 66, 3, 2, 2, 2,
	19, 2, 71, 94, 104, 106, 168, 186, 191, 193, 201, 212, 219, 221, 224, 231,
	234, 238, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "", "", "", "", "':'", "' pr'", "' eq'", "' ne'", "' co'", "' sw'",
	"' ew'", "' gt'", "' ge'", "' lt'", "' le'", "' and '", "' or '", "", "')'",
	"'('", "']'", "'.'", "'['",
}

var lexerSymbolicNames = []string{
	"", "AttributeName", "ComparisonValue", "Space", "Urn", "Colon", "PrOperator",
	"EqOperator", "NeOperator", "CoOperator", "SwOperator", "EwOperator", "GtOperator",
	"GeOperator", "LtOperator", "LeOperator", "AndOperator", "OrOperator",
	"NotOperator", "RxBracket", "LxBracket", "RxSquareBracket", "Dot", "LxSquareBracket",
}

var lexerRuleNames = []string{
	"AttributeName", "ComparisonValue", "Space", "Urn", "Colon", "PrOperator",
	"EqOperator", "NeOperator", "CoOperator", "SwOperator", "EwOperator", "GtOperator",
	"GeOperator", "LtOperator", "LeOperator", "AndOperator", "OrOperator",
	"NotOperator", "RxBracket", "LxBracket", "RxSquareBracket", "Dot", "LxSquareBracket",
	"Alpha", "Char", "STRING", "ESC", "UNICODE", "HEX", "NUMBER", "INT", "EXP",
}

type FilterLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewFilterLexer(input antlr.CharStream) *FilterLexer {

	l := new(FilterLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "FilterLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// FilterLexer tokens.
const (
	FilterLexerAttributeName   = 1
	FilterLexerComparisonValue = 2
	FilterLexerSpace           = 3
	FilterLexerUrn             = 4
	FilterLexerColon           = 5
	FilterLexerPrOperator      = 6
	FilterLexerEqOperator      = 7
	FilterLexerNeOperator      = 8
	FilterLexerCoOperator      = 9
	FilterLexerSwOperator      = 10
	FilterLexerEwOperator      = 11
	FilterLexerGtOperator      = 12
	FilterLexerGeOperator      = 13
	FilterLexerLtOperator      = 14
	FilterLexerLeOperator      = 15
	FilterLexerAndOperator     = 16
	FilterLexerOrOperator      = 17
	FilterLexerNotOperator     = 18
	FilterLexerRxBracket       = 19
	FilterLexerLxBracket       = 20
	FilterLexerRxSquareBracket = 21
	FilterLexerDot             = 22
	FilterLexerLxSquareBracket = 23
)
