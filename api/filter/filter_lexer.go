package filter
import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)
// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter


var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 25, 241, 
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7, 
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12, 
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4, 
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23, 
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9, 
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33, 
	3, 2, 3, 2, 7, 2, 70, 10, 2, 12, 2, 14, 2, 73, 11, 2, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 3, 95, 10, 3, 3, 4, 3, 4, 3, 5, 3, 5, 
	3, 5, 3, 5, 3, 5, 6, 5, 104, 10, 5, 13, 5, 14, 5, 105, 3, 5, 3, 5, 3, 6, 
	3, 6, 3, 7, 3, 7, 3, 7, 3, 7, 3, 8, 3, 8, 3, 8, 3, 8, 3, 9, 3, 9, 3, 9, 
	3, 9, 3, 10, 3, 10, 3, 10, 3, 10, 3, 11, 3, 11, 3, 11, 3, 11, 3, 12, 3, 
	12, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 14, 3, 14, 
	3, 15, 3, 15, 3, 15, 3, 15, 3, 16, 3, 16, 3, 16, 3, 16, 3, 17, 3, 17, 3, 
	17, 3, 17, 3, 17, 3, 17, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 19, 3, 19, 
	3, 19, 3, 19, 3, 19, 5, 19, 168, 10, 19, 3, 19, 3, 19, 3, 20, 3, 20, 3, 
	21, 3, 21, 3, 22, 3, 22, 3, 23, 3, 23, 3, 24, 3, 24, 3, 25, 3, 25, 3, 26, 
	3, 26, 5, 26, 186, 10, 26, 3, 27, 3, 27, 3, 27, 7, 27, 191, 10, 27, 12, 
	27, 14, 27, 194, 11, 27, 3, 27, 3, 27, 3, 28, 3, 28, 3, 28, 5, 28, 201, 
	10, 28, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 30, 3, 30, 3, 31, 
	5, 31, 212, 10, 31, 3, 31, 3, 31, 3, 31, 6, 31, 217, 10, 31, 13, 31, 14, 
	31, 218, 5, 31, 221, 10, 31, 3, 31, 5, 31, 224, 10, 31, 3, 32, 3, 32, 3, 
	32, 7, 32, 229, 10, 32, 12, 32, 14, 32, 232, 11, 32, 5, 32, 234, 10, 32, 
	3, 33, 3, 33, 5, 33, 238, 10, 33, 3, 33, 3, 33, 2, 2, 34, 3, 3, 5, 4, 7, 
	5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 
	15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 22, 43, 23, 45, 
	24, 47, 25, 49, 2, 51, 2, 53, 2, 55, 2, 57, 2, 59, 2, 61, 2, 63, 2, 65, 
	2, 3, 2, 15, 3, 2, 34, 34, 4, 2, 87, 87, 119, 119, 4, 2, 84, 84, 116, 116, 
	4, 2, 80, 80, 112, 112, 4, 2, 67, 92, 99, 124, 5, 2, 47, 47, 50, 59, 97, 
	97, 4, 2, 36, 36, 94, 94, 10, 2, 36, 36, 49, 49, 94, 94, 100, 100, 104, 
	104, 112, 112, 116, 116, 118, 118, 5, 2, 50, 59, 67, 72, 99, 104, 3, 2, 
	50, 59, 3, 2, 51, 59, 4, 2, 71, 71, 103, 103, 4, 2, 45, 45, 47, 47, 2, 
	249, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 
	2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 
	2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 
	3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 
	33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 
	2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 
	2, 3, 67, 3, 2, 2, 2, 5, 94, 3, 2, 2, 2, 7, 96, 3, 2, 2, 2, 9, 98, 3, 2, 
	2, 2, 11, 109, 3, 2, 2, 2, 13, 111, 3, 2, 2, 2, 15, 115, 3, 2, 2, 2, 17, 
	119, 3, 2, 2, 2, 19, 123, 3, 2, 2, 2, 21, 127, 3, 2, 2, 2, 23, 131, 3, 
	2, 2, 2, 25, 135, 3, 2, 2, 2, 27, 139, 3, 2, 2, 2, 29, 143, 3, 2, 2, 2, 
	31, 147, 3, 2, 2, 2, 33, 151, 3, 2, 2, 2, 35, 157, 3, 2, 2, 2, 37, 162, 
	3, 2, 2, 2, 39, 171, 3, 2, 2, 2, 41, 173, 3, 2, 2, 2, 43, 175, 3, 2, 2, 
	2, 45, 177, 3, 2, 2, 2, 47, 179, 3, 2, 2, 2, 49, 181, 3, 2, 2, 2, 51, 185, 
	3, 2, 2, 2, 53, 187, 3, 2, 2, 2, 55, 197, 3, 2, 2, 2, 57, 202, 3, 2, 2, 
	2, 59, 208, 3, 2, 2, 2, 61, 211, 3, 2, 2, 2, 63, 233, 3, 2, 2, 2, 65, 235, 
	3, 2, 2, 2, 67, 71, 5, 49, 25, 2, 68, 70, 5, 51, 26, 2, 69, 68, 3, 2, 2, 
	2, 70, 73, 3, 2, 2, 2, 71, 69, 3, 2, 2, 2, 71, 72, 3, 2, 2, 2, 72, 4, 3, 
	2, 2, 2, 73, 71, 3, 2, 2, 2, 74, 75, 7, 34, 2, 2, 75, 95, 5, 53, 27, 2, 
	76, 77, 7, 34, 2, 2, 77, 95, 5, 61, 31, 2, 78, 79, 7, 34, 2, 2, 79, 80, 
	7, 118, 2, 2, 80, 81, 7, 116, 2, 2, 81, 82, 7, 119, 2, 2, 82, 95, 7, 103, 
	2, 2, 83, 84, 7, 34, 2, 2, 84, 85, 7, 104, 2, 2, 85, 86, 7, 99, 2, 2, 86, 
	87, 7, 110, 2, 2, 87, 88, 7, 117, 2, 2, 88, 95, 7, 103, 2, 2, 89, 90, 7, 
	34, 2, 2, 90, 91, 7, 112, 2, 2, 91, 92, 7, 119, 2, 2, 92, 93, 7, 110, 2, 
	2, 93, 95, 7, 110, 2, 2, 94, 74, 3, 2, 2, 2, 94, 76, 3, 2, 2, 2, 94, 78, 
	3, 2, 2, 2, 94, 83, 3, 2, 2, 2, 94, 89, 3, 2, 2, 2, 95, 6, 3, 2, 2, 2, 
	96, 97, 9, 2, 2, 2, 97, 8, 3, 2, 2, 2, 98, 99, 9, 3, 2, 2, 99, 100, 9, 
	4, 2, 2, 100, 101, 9, 5, 2, 2, 101, 103, 5, 11, 6, 2, 102, 104, 10, 2, 
	2, 2, 103, 102, 3, 2, 2, 2, 104, 105, 3, 2, 2, 2, 105, 103, 3, 2, 2, 2, 
	105, 106, 3, 2, 2, 2, 106, 107, 3, 2, 2, 2, 107, 108, 5, 11, 6, 2, 108, 
	10, 3, 2, 2, 2, 109, 110, 7, 60, 2, 2, 110, 12, 3, 2, 2, 2, 111, 112, 7, 
	34, 2, 2, 112, 113, 7, 114, 2, 2, 113, 114, 7, 116, 2, 2, 114, 14, 3, 2, 
	2, 2, 115, 116, 7, 34, 2, 2, 116, 117, 7, 103, 2, 2, 117, 118, 7, 115, 
	2, 2, 118, 16, 3, 2, 2, 2, 119, 120, 7, 34, 2, 2, 120, 121, 7, 112, 2, 
	2, 121, 122, 7, 103, 2, 2, 122, 18, 3, 2, 2, 2, 123, 124, 7, 34, 2, 2, 
	124, 125, 7, 101, 2, 2, 125, 126, 7, 113, 2, 2, 126, 20, 3, 2, 2, 2, 127, 
	128, 7, 34, 2, 2, 128, 129, 7, 117, 2, 2, 129, 130, 7, 121, 2, 2, 130, 
	22, 3, 2, 2, 2, 131, 132, 7, 34, 2, 2, 132, 133, 7, 103, 2, 2, 133, 134, 
	7, 121, 2, 2, 134, 24, 3, 2, 2, 2, 135, 136, 7, 34, 2, 2, 136, 137, 7, 
	105, 2, 2, 137, 138, 7, 118, 2, 2, 138, 26, 3, 2, 2, 2, 139, 140, 7, 34, 
	2, 2, 140, 141, 7, 105, 2, 2, 141, 142, 7, 103, 2, 2, 142, 28, 3, 2, 2, 
	2, 143, 144, 7, 34, 2, 2, 144, 145, 7, 110, 2, 2, 145, 146, 7, 118, 2, 
	2, 146, 30, 3, 2, 2, 2, 147, 148, 7, 34, 2, 2, 148, 149, 7, 110, 2, 2, 
	149, 150, 7, 103, 2, 2, 150, 32, 3, 2, 2, 2, 151, 152, 7, 34, 2, 2, 152, 
	153, 7, 99, 2, 2, 153, 154, 7, 112, 2, 2, 154, 155, 7, 102, 2, 2, 155, 
	156, 7, 34, 2, 2, 156, 34, 3, 2, 2, 2, 157, 158, 7, 34, 2, 2, 158, 159, 
	7, 113, 2, 2, 159, 160, 7, 116, 2, 2, 160, 161, 7, 34, 2, 2, 161, 36, 3, 
	2, 2, 2, 162, 163, 7, 112, 2, 2, 163, 164, 7, 113, 2, 2, 164, 165, 7, 118, 
	2, 2, 165, 167, 3, 2, 2, 2, 166, 168, 5, 7, 4, 2, 167, 166, 3, 2, 2, 2, 
	167, 168, 3, 2, 2, 2, 168, 169, 3, 2, 2, 2, 169, 170, 5, 41, 21, 2, 170, 
	38, 3, 2, 2, 2, 171, 172, 7, 43, 2, 2, 172, 40, 3, 2, 2, 2, 173, 174, 7, 
	42, 2, 2, 174, 42, 3, 2, 2, 2, 175, 176, 7, 95, 2, 2, 176, 44, 3, 2, 2, 
	2, 177, 178, 7, 48, 2, 2, 178, 46, 3, 2, 2, 2, 179, 180, 7, 93, 2, 2, 180, 
	48, 3, 2, 2, 2, 181, 182, 9, 6, 2, 2, 182, 50, 3, 2, 2, 2, 183, 186, 9, 
	7, 2, 2, 184, 186, 5, 49, 25, 2, 185, 183, 3, 2, 2, 2, 185, 184, 3, 2, 
	2, 2, 186, 52, 3, 2, 2, 2, 187, 192, 7, 36, 2, 2, 188, 191, 5, 55, 28, 
	2, 189, 191, 10, 8, 2, 2, 190, 188, 3, 2, 2, 2, 190, 189, 3, 2, 2, 2, 191, 
	194, 3, 2, 2, 2, 192, 190, 3, 2, 2, 2, 192, 193, 3, 2, 2, 2, 193, 195, 
	3, 2, 2, 2, 194, 192, 3, 2, 2, 2, 195, 196, 7, 36, 2, 2, 196, 54, 3, 2, 
	2, 2, 197, 200, 7, 94, 2, 2, 198, 201, 9, 9, 2, 2, 199, 201, 5, 57, 29, 
	2, 200, 198, 3, 2, 2, 2, 200, 199, 3, 2, 2, 2, 201, 56, 3, 2, 2, 2, 202, 
	203, 7, 119, 2, 2, 203, 204, 5, 59, 30, 2, 204, 205, 5, 59, 30, 2, 205, 
	206, 5, 59, 30, 2, 206, 207, 5, 59, 30, 2, 207, 58, 3, 2, 2, 2, 208, 209, 
	9, 10, 2, 2, 209, 60, 3, 2, 2, 2, 210, 212, 7, 47, 2, 2, 211, 210, 3, 2, 
	2, 2, 211, 212, 3, 2, 2, 2, 212, 213, 3, 2, 2, 2, 213, 220, 5, 63, 32, 
	2, 214, 216, 7, 48, 2, 2, 215, 217, 9, 11, 2, 2, 216, 215, 3, 2, 2, 2, 
	217, 218, 3, 2, 2, 2, 218, 216, 3, 2, 2, 2, 218, 219, 3, 2, 2, 2, 219, 
	221, 3, 2, 2, 2, 220, 214, 3, 2, 2, 2, 220, 221, 3, 2, 2, 2, 221, 223, 
	3, 2, 2, 2, 222, 224, 5, 65, 33, 2, 223, 222, 3, 2, 2, 2, 223, 224, 3, 
	2, 2, 2, 224, 62, 3, 2, 2, 2, 225, 234, 7, 50, 2, 2, 226, 230, 9, 12, 2, 
	2, 227, 229, 9, 11, 2, 2, 228, 227, 3, 2, 2, 2, 229, 232, 3, 2, 2, 2, 230, 
	228, 3, 2, 2, 2, 230, 231, 3, 2, 2, 2, 231, 234, 3, 2, 2, 2, 232, 230, 
	3, 2, 2, 2, 233, 225, 3, 2, 2, 2, 233, 226, 3, 2, 2, 2, 234, 64, 3, 2, 
	2, 2, 235, 237, 9, 13, 2, 2, 236, 238, 9, 14, 2, 2, 237, 236, 3, 2, 2, 
	2, 237, 238, 3, 2, 2, 2, 238, 239, 3, 2, 2, 2, 239, 240, 5, 63, 32, 2, 
	240, 66, 3, 2, 2, 2, 18, 2, 71, 94, 105, 167, 185, 190, 192, 200, 211, 
	218, 220, 223, 230, 233, 237, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "", "", "", "", "':'", "' pr'", "' eq'", "' ne'", "' co'", "' sw'", 
	"' ew'", "' gt'", "' ge'", "' lt'", "' le'", "' and '", "' or '", "", "')'", 
	"'('", "']'", "'.'", "'['",
}

var lexerSymbolicNames = []string{
	"", "AttributeName", "ComparisonValue", "Space", "Urn", "Colon", "PrOperator", 
	"EqOperator", "NeOperator", "CoOperator", "SwOperator", "EwOperator", "GtOperator", 
	"GeOperator", "LtOperator", "LeOperator", "AndOperator", "OrOperator", 
	"NotOperator", "RxBracket", "LxBracket", "RxSquareBracket", "Dot", "LxSquareBracket",
}

var lexerRuleNames = []string{
	"AttributeName", "ComparisonValue", "Space", "Urn", "Colon", "PrOperator", 
	"EqOperator", "NeOperator", "CoOperator", "SwOperator", "EwOperator", "GtOperator", 
	"GeOperator", "LtOperator", "LeOperator", "AndOperator", "OrOperator", 
	"NotOperator", "RxBracket", "LxBracket", "RxSquareBracket", "Dot", "LxSquareBracket", 
	"Alpha", "Char", "STRING", "ESC", "UNICODE", "HEX", "NUMBER", "INT", "EXP",
}

type FilterLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewFilterLexer(input antlr.CharStream) *FilterLexer {

	l := new(FilterLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "FilterLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// FilterLexer tokens.
const (
	FilterLexerAttributeName = 1
	FilterLexerComparisonValue = 2
	FilterLexerSpace = 3
	FilterLexerUrn = 4
	FilterLexerColon = 5
	FilterLexerPrOperator = 6
	FilterLexerEqOperator = 7
	FilterLexerNeOperator = 8
	FilterLexerCoOperator = 9
	FilterLexerSwOperator = 10
	FilterLexerEwOperator = 11
	FilterLexerGtOperator = 12
	FilterLexerGeOperator = 13
	FilterLexerLtOperator = 14
	FilterLexerLeOperator = 15
	FilterLexerAndOperator = 16
	FilterLexerOrOperator = 17
	FilterLexerNotOperator = 18
	FilterLexerRxBracket = 19
	FilterLexerLxBracket = 20
	FilterLexerRxSquareBracket = 21
	FilterLexerDot = 22
	FilterLexerLxSquareBracket = 23
)

