// Generated from /Users/leogr/code/github.com/fabbricadigitale/scimd/api/filter/Filter.g4 by ANTLR 4.6.

package filter
import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)
// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter


var serializedLexerAtn = []uint16{
	3, 1072, 54993, 33286, 44333, 17431, 44785, 36224, 43741, 2, 25, 236, 8, 
	1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7, 9, 
	7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12, 4, 
	13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4, 18, 
	9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23, 9, 
	23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9, 28, 
	4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33, 3, 
	2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 
	8, 3, 8, 7, 8, 82, 10, 8, 12, 8, 14, 8, 85, 11, 8, 3, 9, 3, 9, 3, 9, 3, 
	9, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 
	3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 5, 
	10, 111, 10, 10, 3, 11, 3, 11, 3, 12, 3, 12, 3, 12, 3, 12, 3, 13, 3, 13, 
	3, 13, 3, 13, 3, 14, 3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3, 15, 3, 
	16, 3, 16, 3, 16, 3, 16, 3, 17, 3, 17, 3, 17, 3, 17, 3, 18, 3, 18, 3, 18, 
	3, 18, 3, 19, 3, 19, 3, 19, 3, 19, 3, 20, 3, 20, 3, 20, 3, 20, 3, 21, 3, 
	21, 3, 21, 3, 21, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 23, 3, 23, 
	3, 23, 3, 23, 3, 23, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 
	24, 3, 24, 5, 24, 175, 10, 24, 3, 25, 3, 25, 3, 26, 3, 26, 5, 26, 181, 
	10, 26, 3, 27, 3, 27, 3, 27, 7, 27, 186, 10, 27, 12, 27, 14, 27, 189, 11, 
	27, 3, 27, 3, 27, 3, 28, 3, 28, 3, 28, 5, 28, 196, 10, 28, 3, 29, 3, 29, 
	3, 29, 3, 29, 3, 29, 3, 29, 3, 30, 3, 30, 3, 31, 5, 31, 207, 10, 31, 3, 
	31, 3, 31, 3, 31, 6, 31, 212, 10, 31, 13, 31, 14, 31, 213, 5, 31, 216, 
	10, 31, 3, 31, 5, 31, 219, 10, 31, 3, 32, 3, 32, 3, 32, 7, 32, 224, 10, 
	32, 12, 32, 14, 32, 227, 11, 32, 5, 32, 229, 10, 32, 3, 33, 3, 33, 5, 33, 
	233, 10, 33, 3, 33, 3, 33, 2, 2, 34, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 
	8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 
	33, 18, 35, 19, 37, 20, 39, 21, 41, 22, 43, 23, 45, 24, 47, 25, 49, 2, 
	51, 2, 53, 2, 55, 2, 57, 2, 59, 2, 61, 2, 63, 2, 65, 2, 3, 2, 11, 4, 2, 
	67, 92, 99, 124, 5, 2, 47, 47, 50, 59, 97, 97, 4, 2, 36, 36, 94, 94, 10, 
	2, 36, 36, 49, 49, 94, 94, 100, 100, 104, 104, 112, 112, 116, 116, 118, 
	118, 5, 2, 50, 59, 67, 72, 99, 104, 3, 2, 50, 59, 3, 2, 51, 59, 4, 2, 71, 
	71, 103, 103, 4, 2, 45, 45, 47, 47, 243, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 
	2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 
	2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 
	3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 
	29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 
	2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 
	2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 3, 67, 3, 2, 2, 2, 5, 69, 3, 2, 
	2, 2, 7, 71, 3, 2, 2, 2, 9, 73, 3, 2, 2, 2, 11, 75, 3, 2, 2, 2, 13, 77, 
	3, 2, 2, 2, 15, 79, 3, 2, 2, 2, 17, 86, 3, 2, 2, 2, 19, 110, 3, 2, 2, 2, 
	21, 112, 3, 2, 2, 2, 23, 114, 3, 2, 2, 2, 25, 118, 3, 2, 2, 2, 27, 122, 
	3, 2, 2, 2, 29, 126, 3, 2, 2, 2, 31, 130, 3, 2, 2, 2, 33, 134, 3, 2, 2, 
	2, 35, 138, 3, 2, 2, 2, 37, 142, 3, 2, 2, 2, 39, 146, 3, 2, 2, 2, 41, 150, 
	3, 2, 2, 2, 43, 154, 3, 2, 2, 2, 45, 160, 3, 2, 2, 2, 47, 174, 3, 2, 2, 
	2, 49, 176, 3, 2, 2, 2, 51, 180, 3, 2, 2, 2, 53, 182, 3, 2, 2, 2, 55, 192, 
	3, 2, 2, 2, 57, 197, 3, 2, 2, 2, 59, 203, 3, 2, 2, 2, 61, 206, 3, 2, 2, 
	2, 63, 228, 3, 2, 2, 2, 65, 230, 3, 2, 2, 2, 67, 68, 7, 43, 2, 2, 68, 4, 
	3, 2, 2, 2, 69, 70, 7, 42, 2, 2, 70, 6, 3, 2, 2, 2, 71, 72, 7, 60, 2, 2, 
	72, 8, 3, 2, 2, 2, 73, 74, 7, 48, 2, 2, 74, 10, 3, 2, 2, 2, 75, 76, 7, 
	93, 2, 2, 76, 12, 3, 2, 2, 2, 77, 78, 7, 95, 2, 2, 78, 14, 3, 2, 2, 2, 
	79, 83, 5, 49, 25, 2, 80, 82, 5, 51, 26, 2, 81, 80, 3, 2, 2, 2, 82, 85, 
	3, 2, 2, 2, 83, 81, 3, 2, 2, 2, 83, 84, 3, 2, 2, 2, 84, 16, 3, 2, 2, 2, 
	85, 83, 3, 2, 2, 2, 86, 87, 7, 119, 2, 2, 87, 88, 7, 116, 2, 2, 88, 89, 
	7, 112, 2, 2, 89, 18, 3, 2, 2, 2, 90, 91, 7, 34, 2, 2, 91, 111, 5, 53, 
	27, 2, 92, 93, 7, 34, 2, 2, 93, 111, 5, 61, 31, 2, 94, 95, 7, 34, 2, 2, 
	95, 96, 7, 118, 2, 2, 96, 97, 7, 116, 2, 2, 97, 98, 7, 119, 2, 2, 98, 111, 
	7, 103, 2, 2, 99, 100, 7, 34, 2, 2, 100, 101, 7, 104, 2, 2, 101, 102, 7, 
	99, 2, 2, 102, 103, 7, 110, 2, 2, 103, 104, 7, 117, 2, 2, 104, 111, 7, 
	103, 2, 2, 105, 106, 7, 34, 2, 2, 106, 107, 7, 112, 2, 2, 107, 108, 7, 
	119, 2, 2, 108, 109, 7, 110, 2, 2, 109, 111, 7, 110, 2, 2, 110, 90, 3, 
	2, 2, 2, 110, 92, 3, 2, 2, 2, 110, 94, 3, 2, 2, 2, 110, 99, 3, 2, 2, 2, 
	110, 105, 3, 2, 2, 2, 111, 20, 3, 2, 2, 2, 112, 113, 7, 34, 2, 2, 113, 
	22, 3, 2, 2, 2, 114, 115, 7, 34, 2, 2, 115, 116, 7, 114, 2, 2, 116, 117, 
	7, 116, 2, 2, 117, 24, 3, 2, 2, 2, 118, 119, 7, 34, 2, 2, 119, 120, 7, 
	103, 2, 2, 120, 121, 7, 115, 2, 2, 121, 26, 3, 2, 2, 2, 122, 123, 7, 34, 
	2, 2, 123, 124, 7, 112, 2, 2, 124, 125, 7, 103, 2, 2, 125, 28, 3, 2, 2, 
	2, 126, 127, 7, 34, 2, 2, 127, 128, 7, 101, 2, 2, 128, 129, 7, 113, 2, 
	2, 129, 30, 3, 2, 2, 2, 130, 131, 7, 34, 2, 2, 131, 132, 7, 117, 2, 2, 
	132, 133, 7, 121, 2, 2, 133, 32, 3, 2, 2, 2, 134, 135, 7, 34, 2, 2, 135, 
	136, 7, 103, 2, 2, 136, 137, 7, 121, 2, 2, 137, 34, 3, 2, 2, 2, 138, 139, 
	7, 34, 2, 2, 139, 140, 7, 105, 2, 2, 140, 141, 7, 118, 2, 2, 141, 36, 3, 
	2, 2, 2, 142, 143, 7, 34, 2, 2, 143, 144, 7, 105, 2, 2, 144, 145, 7, 103, 
	2, 2, 145, 38, 3, 2, 2, 2, 146, 147, 7, 34, 2, 2, 147, 148, 7, 110, 2, 
	2, 148, 149, 7, 118, 2, 2, 149, 40, 3, 2, 2, 2, 150, 151, 7, 34, 2, 2, 
	151, 152, 7, 110, 2, 2, 152, 153, 7, 103, 2, 2, 153, 42, 3, 2, 2, 2, 154, 
	155, 7, 34, 2, 2, 155, 156, 7, 99, 2, 2, 156, 157, 7, 112, 2, 2, 157, 158, 
	7, 102, 2, 2, 158, 159, 7, 34, 2, 2, 159, 44, 3, 2, 2, 2, 160, 161, 7, 
	34, 2, 2, 161, 162, 7, 113, 2, 2, 162, 163, 7, 116, 2, 2, 163, 164, 7, 
	34, 2, 2, 164, 46, 3, 2, 2, 2, 165, 166, 7, 112, 2, 2, 166, 167, 7, 113, 
	2, 2, 167, 168, 7, 118, 2, 2, 168, 169, 7, 34, 2, 2, 169, 175, 7, 42, 2, 
	2, 170, 171, 7, 112, 2, 2, 171, 172, 7, 113, 2, 2, 172, 173, 7, 118, 2, 
	2, 173, 175, 7, 42, 2, 2, 174, 165, 3, 2, 2, 2, 174, 170, 3, 2, 2, 2, 175, 
	48, 3, 2, 2, 2, 176, 177, 9, 2, 2, 2, 177, 50, 3, 2, 2, 2, 178, 181, 9, 
	3, 2, 2, 179, 181, 5, 49, 25, 2, 180, 178, 3, 2, 2, 2, 180, 179, 3, 2, 
	2, 2, 181, 52, 3, 2, 2, 2, 182, 187, 7, 36, 2, 2, 183, 186, 5, 55, 28, 
	2, 184, 186, 10, 4, 2, 2, 185, 183, 3, 2, 2, 2, 185, 184, 3, 2, 2, 2, 186, 
	189, 3, 2, 2, 2, 187, 185, 3, 2, 2, 2, 187, 188, 3, 2, 2, 2, 188, 190, 
	3, 2, 2, 2, 189, 187, 3, 2, 2, 2, 190, 191, 7, 36, 2, 2, 191, 54, 3, 2, 
	2, 2, 192, 195, 7, 94, 2, 2, 193, 196, 9, 5, 2, 2, 194, 196, 5, 57, 29, 
	2, 195, 193, 3, 2, 2, 2, 195, 194, 3, 2, 2, 2, 196, 56, 3, 2, 2, 2, 197, 
	198, 7, 119, 2, 2, 198, 199, 5, 59, 30, 2, 199, 200, 5, 59, 30, 2, 200, 
	201, 5, 59, 30, 2, 201, 202, 5, 59, 30, 2, 202, 58, 3, 2, 2, 2, 203, 204, 
	9, 6, 2, 2, 204, 60, 3, 2, 2, 2, 205, 207, 7, 47, 2, 2, 206, 205, 3, 2, 
	2, 2, 206, 207, 3, 2, 2, 2, 207, 208, 3, 2, 2, 2, 208, 215, 5, 63, 32, 
	2, 209, 211, 7, 48, 2, 2, 210, 212, 9, 7, 2, 2, 211, 210, 3, 2, 2, 2, 212, 
	213, 3, 2, 2, 2, 213, 211, 3, 2, 2, 2, 213, 214, 3, 2, 2, 2, 214, 216, 
	3, 2, 2, 2, 215, 209, 3, 2, 2, 2, 215, 216, 3, 2, 2, 2, 216, 218, 3, 2, 
	2, 2, 217, 219, 5, 65, 33, 2, 218, 217, 3, 2, 2, 2, 218, 219, 3, 2, 2, 
	2, 219, 62, 3, 2, 2, 2, 220, 229, 7, 50, 2, 2, 221, 225, 9, 8, 2, 2, 222, 
	224, 9, 7, 2, 2, 223, 222, 3, 2, 2, 2, 224, 227, 3, 2, 2, 2, 225, 223, 
	3, 2, 2, 2, 225, 226, 3, 2, 2, 2, 226, 229, 3, 2, 2, 2, 227, 225, 3, 2, 
	2, 2, 228, 220, 3, 2, 2, 2, 228, 221, 3, 2, 2, 2, 229, 64, 3, 2, 2, 2, 
	230, 232, 9, 9, 2, 2, 231, 233, 9, 10, 2, 2, 232, 231, 3, 2, 2, 2, 232, 
	233, 3, 2, 2, 2, 233, 234, 3, 2, 2, 2, 234, 235, 5, 63, 32, 2, 235, 66, 
	3, 2, 2, 2, 17, 2, 83, 110, 174, 180, 185, 187, 195, 206, 213, 215, 218, 
	225, 228, 232, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "')'", "'('", "':'", "'.'", "'['", "']'", "", "'urn'", "", "' '", "' pr'", 
	"' eq'", "' ne'", "' co'", "' sw'", "' ew'", "' gt'", "' ge'", "' lt'", 
	"' le'", "' and '", "' or '",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "AttributeName", "Urn", "ComparisonValue", 
	"Space", "PrOperator", "EqOperator", "NeOperator", "CoOperator", "SwOperator", 
	"EwOperator", "GtOperator", "GeOperator", "LtOperator", "LeOperator", "AndOperator", 
	"OrOperator", "NotOperator",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "AttributeName", "Urn", 
	"ComparisonValue", "Space", "PrOperator", "EqOperator", "NeOperator", "CoOperator", 
	"SwOperator", "EwOperator", "GtOperator", "GeOperator", "LtOperator", "LeOperator", 
	"AndOperator", "OrOperator", "NotOperator", "Alpha", "Char", "STRING", 
	"ESC", "UNICODE", "HEX", "NUMBER", "INT", "EXP",
}

type FilterLexer struct {
	*antlr.BaseLexer
	modeNames []string
	// TODO: EOF string
}

func NewFilterLexer(input antlr.CharStream) *FilterLexer {
	var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}

	l := new(FilterLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "Filter.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// FilterLexer tokens.
const (
	FilterLexerT__0 = 1
	FilterLexerT__1 = 2
	FilterLexerT__2 = 3
	FilterLexerT__3 = 4
	FilterLexerT__4 = 5
	FilterLexerT__5 = 6
	FilterLexerAttributeName = 7
	FilterLexerUrn = 8
	FilterLexerComparisonValue = 9
	FilterLexerSpace = 10
	FilterLexerPrOperator = 11
	FilterLexerEqOperator = 12
	FilterLexerNeOperator = 13
	FilterLexerCoOperator = 14
	FilterLexerSwOperator = 15
	FilterLexerEwOperator = 16
	FilterLexerGtOperator = 17
	FilterLexerGeOperator = 18
	FilterLexerLtOperator = 19
	FilterLexerLeOperator = 20
	FilterLexerAndOperator = 21
	FilterLexerOrOperator = 22
	FilterLexerNotOperator = 23
)

