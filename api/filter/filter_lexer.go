// Generated from /home/leodido/workspaces/golang/src/github.com/fabbricadigitale/scimd/api/filter/FilterLexer.g4 by ANTLR 4.7.

package filter
import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)
// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter


var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 24, 230, 
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7, 
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12, 
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4, 
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23, 
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9, 
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 3, 2, 3, 2, 
	7, 2, 68, 10, 2, 12, 2, 14, 2, 71, 11, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 5, 3, 93, 10, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 5, 
	3, 6, 3, 6, 3, 6, 3, 6, 3, 7, 3, 7, 3, 7, 3, 7, 3, 8, 3, 8, 3, 8, 3, 8, 
	3, 9, 3, 9, 3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 10, 3, 11, 3, 11, 3, 11, 
	3, 11, 3, 12, 3, 12, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 13, 3, 14, 3, 
	14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 16, 3, 16, 
	3, 16, 3, 16, 3, 16, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 5, 17, 153, 10, 
	17, 3, 17, 3, 17, 3, 18, 3, 18, 3, 19, 3, 19, 3, 20, 3, 20, 3, 21, 3, 21, 
	3, 22, 3, 22, 3, 22, 3, 22, 3, 23, 3, 23, 3, 24, 3, 24, 3, 25, 3, 25, 5, 
	25, 175, 10, 25, 3, 26, 3, 26, 3, 26, 7, 26, 180, 10, 26, 12, 26, 14, 26, 
	183, 11, 26, 3, 26, 3, 26, 3, 27, 3, 27, 3, 27, 5, 27, 190, 10, 27, 3, 
	28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 29, 3, 29, 3, 30, 5, 30, 201, 
	10, 30, 3, 30, 3, 30, 3, 30, 6, 30, 206, 10, 30, 13, 30, 14, 30, 207, 5, 
	30, 210, 10, 30, 3, 30, 5, 30, 213, 10, 30, 3, 31, 3, 31, 3, 31, 7, 31, 
	218, 10, 31, 12, 31, 14, 31, 221, 11, 31, 5, 31, 223, 10, 31, 3, 32, 3, 
	32, 5, 32, 227, 10, 32, 3, 32, 3, 32, 2, 2, 33, 3, 3, 5, 4, 7, 5, 9, 6, 
	11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 
	16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 22, 43, 23, 45, 24, 47, 
	2, 49, 2, 51, 2, 53, 2, 55, 2, 57, 2, 59, 2, 61, 2, 63, 2, 3, 2, 11, 4, 
	2, 67, 92, 99, 124, 5, 2, 47, 47, 50, 59, 97, 97, 4, 2, 36, 36, 94, 94, 
	10, 2, 36, 36, 49, 49, 94, 94, 100, 100, 104, 104, 112, 112, 116, 116, 
	118, 118, 5, 2, 50, 59, 67, 72, 99, 104, 3, 2, 50, 59, 3, 2, 51, 59, 4, 
	2, 71, 71, 103, 103, 4, 2, 45, 45, 47, 47, 2, 237, 2, 3, 3, 2, 2, 2, 2, 
	5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 
	13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 
	2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 
	2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 
	2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 
	2, 2, 2, 2, 45, 3, 2, 2, 2, 3, 65, 3, 2, 2, 2, 5, 92, 3, 2, 2, 2, 7, 94, 
	3, 2, 2, 2, 9, 96, 3, 2, 2, 2, 11, 100, 3, 2, 2, 2, 13, 104, 3, 2, 2, 2, 
	15, 108, 3, 2, 2, 2, 17, 112, 3, 2, 2, 2, 19, 116, 3, 2, 2, 2, 21, 120, 
	3, 2, 2, 2, 23, 124, 3, 2, 2, 2, 25, 128, 3, 2, 2, 2, 27, 132, 3, 2, 2, 
	2, 29, 136, 3, 2, 2, 2, 31, 142, 3, 2, 2, 2, 33, 147, 3, 2, 2, 2, 35, 156, 
	3, 2, 2, 2, 37, 158, 3, 2, 2, 2, 39, 160, 3, 2, 2, 2, 41, 162, 3, 2, 2, 
	2, 43, 164, 3, 2, 2, 2, 45, 168, 3, 2, 2, 2, 47, 170, 3, 2, 2, 2, 49, 174, 
	3, 2, 2, 2, 51, 176, 3, 2, 2, 2, 53, 186, 3, 2, 2, 2, 55, 191, 3, 2, 2, 
	2, 57, 197, 3, 2, 2, 2, 59, 200, 3, 2, 2, 2, 61, 222, 3, 2, 2, 2, 63, 224, 
	3, 2, 2, 2, 65, 69, 5, 47, 24, 2, 66, 68, 5, 49, 25, 2, 67, 66, 3, 2, 2, 
	2, 68, 71, 3, 2, 2, 2, 69, 67, 3, 2, 2, 2, 69, 70, 3, 2, 2, 2, 70, 4, 3, 
	2, 2, 2, 71, 69, 3, 2, 2, 2, 72, 73, 7, 34, 2, 2, 73, 93, 5, 51, 26, 2, 
	74, 75, 7, 34, 2, 2, 75, 93, 5, 59, 30, 2, 76, 77, 7, 34, 2, 2, 77, 78, 
	7, 118, 2, 2, 78, 79, 7, 116, 2, 2, 79, 80, 7, 119, 2, 2, 80, 93, 7, 103, 
	2, 2, 81, 82, 7, 34, 2, 2, 82, 83, 7, 104, 2, 2, 83, 84, 7, 99, 2, 2, 84, 
	85, 7, 110, 2, 2, 85, 86, 7, 117, 2, 2, 86, 93, 7, 103, 2, 2, 87, 88, 7, 
	34, 2, 2, 88, 89, 7, 112, 2, 2, 89, 90, 7, 119, 2, 2, 90, 91, 7, 110, 2, 
	2, 91, 93, 7, 110, 2, 2, 92, 72, 3, 2, 2, 2, 92, 74, 3, 2, 2, 2, 92, 76, 
	3, 2, 2, 2, 92, 81, 3, 2, 2, 2, 92, 87, 3, 2, 2, 2, 93, 6, 3, 2, 2, 2, 
	94, 95, 7, 34, 2, 2, 95, 8, 3, 2, 2, 2, 96, 97, 7, 34, 2, 2, 97, 98, 7, 
	114, 2, 2, 98, 99, 7, 116, 2, 2, 99, 10, 3, 2, 2, 2, 100, 101, 7, 34, 2, 
	2, 101, 102, 7, 103, 2, 2, 102, 103, 7, 115, 2, 2, 103, 12, 3, 2, 2, 2, 
	104, 105, 7, 34, 2, 2, 105, 106, 7, 112, 2, 2, 106, 107, 7, 103, 2, 2, 
	107, 14, 3, 2, 2, 2, 108, 109, 7, 34, 2, 2, 109, 110, 7, 101, 2, 2, 110, 
	111, 7, 113, 2, 2, 111, 16, 3, 2, 2, 2, 112, 113, 7, 34, 2, 2, 113, 114, 
	7, 117, 2, 2, 114, 115, 7, 121, 2, 2, 115, 18, 3, 2, 2, 2, 116, 117, 7, 
	34, 2, 2, 117, 118, 7, 103, 2, 2, 118, 119, 7, 121, 2, 2, 119, 20, 3, 2, 
	2, 2, 120, 121, 7, 34, 2, 2, 121, 122, 7, 105, 2, 2, 122, 123, 7, 118, 
	2, 2, 123, 22, 3, 2, 2, 2, 124, 125, 7, 34, 2, 2, 125, 126, 7, 105, 2, 
	2, 126, 127, 7, 103, 2, 2, 127, 24, 3, 2, 2, 2, 128, 129, 7, 34, 2, 2, 
	129, 130, 7, 110, 2, 2, 130, 131, 7, 118, 2, 2, 131, 26, 3, 2, 2, 2, 132, 
	133, 7, 34, 2, 2, 133, 134, 7, 110, 2, 2, 134, 135, 7, 103, 2, 2, 135, 
	28, 3, 2, 2, 2, 136, 137, 7, 34, 2, 2, 137, 138, 7, 99, 2, 2, 138, 139, 
	7, 112, 2, 2, 139, 140, 7, 102, 2, 2, 140, 141, 7, 34, 2, 2, 141, 30, 3, 
	2, 2, 2, 142, 143, 7, 34, 2, 2, 143, 144, 7, 113, 2, 2, 144, 145, 7, 116, 
	2, 2, 145, 146, 7, 34, 2, 2, 146, 32, 3, 2, 2, 2, 147, 148, 7, 112, 2, 
	2, 148, 149, 7, 113, 2, 2, 149, 150, 7, 118, 2, 2, 150, 152, 3, 2, 2, 2, 
	151, 153, 5, 7, 4, 2, 152, 151, 3, 2, 2, 2, 152, 153, 3, 2, 2, 2, 153, 
	154, 3, 2, 2, 2, 154, 155, 5, 37, 19, 2, 155, 34, 3, 2, 2, 2, 156, 157, 
	7, 43, 2, 2, 157, 36, 3, 2, 2, 2, 158, 159, 7, 42, 2, 2, 159, 38, 3, 2, 
	2, 2, 160, 161, 7, 95, 2, 2, 161, 40, 3, 2, 2, 2, 162, 163, 7, 48, 2, 2, 
	163, 42, 3, 2, 2, 2, 164, 165, 7, 119, 2, 2, 165, 166, 7, 116, 2, 2, 166, 
	167, 7, 112, 2, 2, 167, 44, 3, 2, 2, 2, 168, 169, 7, 93, 2, 2, 169, 46, 
	3, 2, 2, 2, 170, 171, 9, 2, 2, 2, 171, 48, 3, 2, 2, 2, 172, 175, 9, 3, 
	2, 2, 173, 175, 5, 47, 24, 2, 174, 172, 3, 2, 2, 2, 174, 173, 3, 2, 2, 
	2, 175, 50, 3, 2, 2, 2, 176, 181, 7, 36, 2, 2, 177, 180, 5, 53, 27, 2, 
	178, 180, 10, 4, 2, 2, 179, 177, 3, 2, 2, 2, 179, 178, 3, 2, 2, 2, 180, 
	183, 3, 2, 2, 2, 181, 179, 3, 2, 2, 2, 181, 182, 3, 2, 2, 2, 182, 184, 
	3, 2, 2, 2, 183, 181, 3, 2, 2, 2, 184, 185, 7, 36, 2, 2, 185, 52, 3, 2, 
	2, 2, 186, 189, 7, 94, 2, 2, 187, 190, 9, 5, 2, 2, 188, 190, 5, 55, 28, 
	2, 189, 187, 3, 2, 2, 2, 189, 188, 3, 2, 2, 2, 190, 54, 3, 2, 2, 2, 191, 
	192, 7, 119, 2, 2, 192, 193, 5, 57, 29, 2, 193, 194, 5, 57, 29, 2, 194, 
	195, 5, 57, 29, 2, 195, 196, 5, 57, 29, 2, 196, 56, 3, 2, 2, 2, 197, 198, 
	9, 6, 2, 2, 198, 58, 3, 2, 2, 2, 199, 201, 7, 47, 2, 2, 200, 199, 3, 2, 
	2, 2, 200, 201, 3, 2, 2, 2, 201, 202, 3, 2, 2, 2, 202, 209, 5, 61, 31, 
	2, 203, 205, 7, 48, 2, 2, 204, 206, 9, 7, 2, 2, 205, 204, 3, 2, 2, 2, 206, 
	207, 3, 2, 2, 2, 207, 205, 3, 2, 2, 2, 207, 208, 3, 2, 2, 2, 208, 210, 
	3, 2, 2, 2, 209, 203, 3, 2, 2, 2, 209, 210, 3, 2, 2, 2, 210, 212, 3, 2, 
	2, 2, 211, 213, 5, 63, 32, 2, 212, 211, 3, 2, 2, 2, 212, 213, 3, 2, 2, 
	2, 213, 60, 3, 2, 2, 2, 214, 223, 7, 50, 2, 2, 215, 219, 9, 8, 2, 2, 216, 
	218, 9, 7, 2, 2, 217, 216, 3, 2, 2, 2, 218, 221, 3, 2, 2, 2, 219, 217, 
	3, 2, 2, 2, 219, 220, 3, 2, 2, 2, 220, 223, 3, 2, 2, 2, 221, 219, 3, 2, 
	2, 2, 222, 214, 3, 2, 2, 2, 222, 215, 3, 2, 2, 2, 223, 62, 3, 2, 2, 2, 
	224, 226, 9, 9, 2, 2, 225, 227, 9, 10, 2, 2, 226, 225, 3, 2, 2, 2, 226, 
	227, 3, 2, 2, 2, 227, 228, 3, 2, 2, 2, 228, 229, 5, 61, 31, 2, 229, 64, 
	3, 2, 2, 2, 17, 2, 69, 92, 152, 174, 179, 181, 189, 200, 207, 209, 212, 
	219, 222, 226, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "", "", "' '", "' pr'", "' eq'", "' ne'", "' co'", "' sw'", "' ew'", 
	"' gt'", "' ge'", "' lt'", "' le'", "' and '", "' or '", "", "')'", "'('", 
	"']'", "'.'", "'urn'", "'['",
}

var lexerSymbolicNames = []string{
	"", "AttributeName", "ComparisonValue", "Space", "PrOperator", "EqOperator", 
	"NeOperator", "CoOperator", "SwOperator", "EwOperator", "GtOperator", "GeOperator", 
	"LtOperator", "LeOperator", "AndOperator", "OrOperator", "NotOperator", 
	"RxBracket", "LxBracket", "RxSquareBracket", "Dot", "Urn", "LxSquareBracket",
}

var lexerRuleNames = []string{
	"AttributeName", "ComparisonValue", "Space", "PrOperator", "EqOperator", 
	"NeOperator", "CoOperator", "SwOperator", "EwOperator", "GtOperator", "GeOperator", 
	"LtOperator", "LeOperator", "AndOperator", "OrOperator", "NotOperator", 
	"RxBracket", "LxBracket", "RxSquareBracket", "Dot", "Urn", "LxSquareBracket", 
	"Alpha", "Char", "STRING", "ESC", "UNICODE", "HEX", "NUMBER", "INT", "EXP",
}

type FilterLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewFilterLexer(input antlr.CharStream) *FilterLexer {

	l := new(FilterLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "FilterLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// FilterLexer tokens.
const (
	FilterLexerAttributeName = 1
	FilterLexerComparisonValue = 2
	FilterLexerSpace = 3
	FilterLexerPrOperator = 4
	FilterLexerEqOperator = 5
	FilterLexerNeOperator = 6
	FilterLexerCoOperator = 7
	FilterLexerSwOperator = 8
	FilterLexerEwOperator = 9
	FilterLexerGtOperator = 10
	FilterLexerGeOperator = 11
	FilterLexerLtOperator = 12
	FilterLexerLeOperator = 13
	FilterLexerAndOperator = 14
	FilterLexerOrOperator = 15
	FilterLexerNotOperator = 16
	FilterLexerRxBracket = 17
	FilterLexerLxBracket = 18
	FilterLexerRxSquareBracket = 19
	FilterLexerDot = 20
	FilterLexerUrn = 21
	FilterLexerLxSquareBracket = 22
)

